% \iffalse meta-comment
%
% This file is part of the package lipsum for use with LaTeX2e.
%
% Function: Access to 150 paragraphs of the well known Lorem Ipsum dummy text.
%
% This program may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% Please send error reports and suggestions for improvements to
%    https://github.com/PhelypeOleinik/lipsum
%
\def\lipsumversion{2.3}
\def\lipsumdate{2021-03-03}
%<*driver>
\ProvidesFile{lipsum.dtx}%
  [\lipsumdate\space v\lipsumversion\space
   Access to 150 of Lorem Ipsum dummy text]
\documentclass{l3doc}
\usepackage{xcolor}
\usepackage{booktabs}
\usepackage{tabularx}
\usepackage[a4paper,
  top=2cm, left=8.8cm, right=2cm, bottom=3cm,
  marginparwidth=6.3cm, marginparsep=.5cm,
]{geometry}
\newlength\fullmargin
\setlength\fullmargin\marginparwidth
\addtolength\fullmargin\marginparsep
\usepackage{mdframed}
\mdfdefinestyle{expl}{%
  backgroundcolor=black!5!white,
  linewidth=0pt,
  middlelinewidth=0pt
}
\newmdenv[style=expl]{explbox}

\newmdenv[%
  style=expl,
  subtitlebackgroundcolor=yellow!5!white,
  frametitlebackgroundcolor=yellow!5!white,
  frametitle={Code},
]  {exploutputbox}

\usepackage{lipsum,multicol}
\usepackage[latin, english]{babel}
\makeatletter
\newcommand\@subtitle{}
\newcommand\subtitle[1]{%
  \renewcommand\@subtitle{#1}}
  \renewcommand\maketitle[1]{
  \noindent
  \hspace{-\fullmargin}%
  \begin{minipage}{\textwidth+\fullmargin}
    \renewcommand\thefootnote{\fnsymbol{footnote}}
    \let\thanks\footnote
    {
      \centering
      {\LARGE \@title}\\[.8\baselineskip]
      {\LARGE \@subtitle}\\[2\baselineskip]
      {\Large \@author}\\[\baselineskip]
      {\Large \@date}\\[\baselineskip]
    }
    \ifx\\#1\\\else
      \begin{multicols}{2}[%
        \subsection*{\hfill\abstractname\hfill\null}]
        \setlength{\columnsep}{.5cm}%
        #1
      \end{multicols}
    \fi
  \end{minipage}
}
\makeatother
\newenvironment{wide}{
  \hspace{-.75\fullmargin}
  \begin{minipage}{\textwidth+.75\fullmargin}
}{
  \end{minipage}
}

\newenvironment{widefigure}
{
  \begin{figure}
    \begin{wide}
}
{
    \end{wide}
  \end{figure}
}
\newlist{macrolist}{itemize}{1}%
\setlist[macrolist]{%
  label=$\triangleright$,
  labelindent=0cm,
  itemsep=.15\baselineskip,
  leftmargin=.75\parindent
}
\newcommand\opt[1]{\textsf{#1}} % l3doc does not have some markup for package options...
\newcommand\lips{\emph{Lorem ipsum\ldots}}
\renewcommand\topfraction{.85}
\renewcommand\textfraction{.15}
\renewcommand\floatpagefraction{.85}
\emergencystretch 2em
\usepackage{hyperref}
\begin{document}
  \DocInput{lipsum.dtx}
\end{document}
%</driver>
%<*package>
\NeedsTeXFormat{LaTeX2e}
\@ifundefined{NewDocumentCommand}
  {\RequirePackage{xparse}}{}
\ProvidesExplPackage {lipsum} {\lipsumdate} {\lipsumversion}
  {150 paragraphs of Lorem Ipsum dummy text}
%</package>
% \fi
%
% \title{\pkg{lipsum}}
% \subtitle{Access to 150 paragraphs of Lorem Ipsum dummy
% text\thanks{Version: \lipsumversion}^^A
% \thanks{Since March 2021, Phelype Oleinik maintains this package
%   (\href{mailto:phelype.oleinik@latex-project.org}
%        {phelype.oleinik\meta{at}latex-project.org}).}}
% \author{Patrick Happel\thanks{patrick.happel@rub.de}}
% \date{\today}
% \RecordChanges
% \changes{v1.0}{2004/05/15}{First release}
% \changes{v1.1}{2011/02/08}{Added support for typesetting dummy text without
% paragraphs in between.}
% \changes{v1.2}{2011/04/14}{Bug fix (thanks to  Florent Chervet and Ulrike
% Fischer for reporting).}
% \changes{v1.3}{2014/07/19}{Introduced some improvements and provided some
% new macros (thanks to tex.stackexchange user egreg).}
% \changes{v1.3a}{2017/08/10}{Fixed a type in the documentation (thanks to
% Vincent Belaïche). This version never made its way on CTAN due to some
% version naming conflicts. Since the change here was only in the
% documentation, I first didn't want it to be 1.3a and later had no time to
% update it properly.}
% \changes{v2.0}{2018/11/07}{Added the possibility to fetch a number of sentences from the
% lipsum paragraphs (thanks to Frank Mittelbach).}
% \changes{v2.0}{2018/11/07}{Rewritten code in \pkg{expl3} syntax.}
% \changes{v2.1}{2018/11/18}{Changed defaults, now nothing is typeset at the
% end of any list.}
% \changes{v2.1a}{2018/11/24}{Added forgotten ins-file to CTAN. This requires
% a new version number.}
% \changes{v2.2}{2018/12/25}{replaced \cs{tex_par:D} by \cs{par} to avoid
% incompatibilities with \LaTeX2e's |list|-environment. Thanks to Karl Hagen
% for reporting. See \url{ttps://github.com/patta42/lipsum/issues/12}.}
% \changes{v2.3}{2021/03/03}{Remove dependency on an \pkg{xparse} internal
%   macro.  \pkg{lipsum}'s new home at
%   \url{https://github.com/PhelypeOleinik/lipsum}}
%
% \maketitle{\pkg{lipsum} is a \LaTeX{} package that produces dummy text
% to be used in test documents or examples. The paragraphs are taken with
% permission from \url{https://www.lipsum.com/}, thanks to James Wilson for
% this work. Furthermore, the following people contributed to \pkg{lipsum} by
% suggesting improvements, correcting bugs or finding typos in the
% documentation: Florent Chervet, Ulrike Fischer, Vincent Belaïche, Enrico
% Gregorio, Frank Mittelbach, Karl Hagen.
%
% \hspace{1em} Please, file bug reports, typos in the documentation or
% feature requests as an issue on
% \url{https://github.com/PhelypeOleinik/lipsum/issues}.}
% \begin{documentation}
%
% \section{Quick usage overview}
% To load the package specify
% \begin{verbatim}
%     \usepackage{lipsum}
% \end{verbatim}
% in the preamble of your document. This package provides several
% macros. \DescribeMacro{\lipsum}The most important one is
% \cs{lipsum}. This macro typesets the \emph{Lorem ipsum}
% paragraphs. It has two optional arguments. The first one allows to specify the range
% of the  paragraphs. For example, \verb|\lipsum[4-57]| typesets the paragraphs 4 to
% 57 and accordingly, \verb|\lipsum[23]| typesets the 23\textsuperscript{rd}
% paragraph. Using \cs{lipsum} without its optional argument typesets
% the paragraphs 1--7 of \lips
%
% As of version 2.0, \cs{lipsum} has a second optional argument which allows
% selecting a range of sentences from the paragraphs. To get the sentences
% four to eight from paragraphs three to nine, use |\lipsum[3-9][4-8]|.
%
% \section{Foreword to Version 2.0}\label{sec:foreword2.0}
% Version 2.0 of \pkg{lipsum} is a complete (well, nearly complete)  rewrite
% of the code in \pkg{expl3}
% syntax. I have never used \pkg{expl3} before and thus the code might be too
% complicated, might use wrong or badly chosen data types or weird function
% names. I am happy to receive comments on this.
%
% Due the complete rewrite, some internals have changed which might impact
% older documents. Since, however, I guess that \pkg{lipsum} is not used for
% documents with true, important, content, I think potentially breaking up old
% documents is not a big issue here. The changes are:
% \begin{itemize}
% \item The package option \opt{nopar} now uses a \cs{space} as terminator,
% instead of \cs{relax}.
% \item The commands \cs{UnpackLipsum} and \cs{UnpackLipsum*} are no longer
% available. The effect of \cs{UnpackLipsum} now is default for
% \cs{unpacklipsum} (or \cs{unpacklipsum*}, depending on the package
% option). The effect of \cs{UnpackLipsum*} can be mimicked by using
% \cs{LipsumProtect}\Arg{command}, as in the following example:
% \begin{explbox}
% \begin{verbatim}
% \documentclass{article}
% \usepackage{lipsum,xcolor}
% \newcommand\foo{}
% \SetLipsumParListItemEnd{\LipsumProtect{\foo}}
%
% \begin{document}
%   \renewcommand\foo{\color{.!75!red}}
%   { \lipsumexp }
%
%   \newcounter{mycnt}\setcounter{mycnt}{1}
%   \renewcommand\foo{%
%     (\themycnt)\stepcounter{mycnt}}
%   \lipsumexp
%
% \end{document}
%
% \end{verbatim}
% \end{explbox}
% \item The internal macros \cs{lips@i}, \cs{lips@ii}, \cs{lips@iii}, \ldots,
%   \cs{lips@cl} are no longer available.
% \item All other internal macros (with one exception) are no longer available,
%   too.
% \end{itemize}
% \section{Foreword to version 2.2}
% As of version 2.2, \pkg{lipsum} provides a simple interface to define other
% texts to be used as output of the \cs{lipsum}-family of commands. This was
% heavily inspired by an issue raised by
% \emph{svenper} on
% github\footnote{\url{https://github.com/patta42/lipsum/issues/13}}. However,
% the implementation of this interface might not match the needs of everyone
% who wants to provide a dummy text in another language. Comments and
% suggestions on this are very welcome.
%
% Please note that the documentation still only refers to the \lips-text.
%
% \section{Usage}
% \pkg{lipsum} was intended to quickly provide a way to fill a page or two to
% analyze the page
% layout\footnote{\url{https://groups.google.com/d/topic/de.comp.text.tex/oPeLOjkrLfk/discussion}}.
% While it has grown in the meanwhile and now provides some more advanced
% features, it still is only intended to quickly provide text. If you want more
% features, look at the \pkg{blindtext}-package.
%
% \subsection{Package Options}
% \pkg{lipsum} outputs a range of paragraphs taken from the \lips\ dummy
% text. The package option controls how the single paragraphs of \lips\ are
% separated. The default is to separate the paragaraph with \cs{par}. One
% option is available to change the default behaviour:
% \begin{description}
% \item[\opt{nopar}:] Instead of \cs{par}, \cs{space} is used to
% separate the paragraphs.
% \end{description}
%
% \subsection{User Commands}
% \DescribeMacro{\lipsum}\DescribeMacro{\lipsum*}
% \begin{quote}
%   \cs{lipsum}\oarg{paragraph range}\oarg{sentence range}\\
%   \cs{lipsum*}\oarg{paragraph range}\oarg{sentence range}
% \end{quote}
% \cs{lipsum} (and \cs{lipsum*}) uses a \meta{range} as input. A \meta{range}
% consists either of a single \meta{number} or two numbers separated by a dash
% (|-|), as in \meta{number_1}-\meta{number_2}. While syntactically correct,
% \cs{lipsum} (and related commands) might fail if
% $\meta{number_2} < \meta{number_1}$.
%
% If used without an argument, \cs{lipsum} outputs the paragraphs 1--7 of
% \lips\ (as long as the default has not been overwritten, see
% below). \cs{lipsum} terminates every paragraph depending on the package
% option (using \cs{par} is the default). \cs{lipsum*} does the same, but
% uses a different termination (default is to use a blank space) for each
% paragraph. \emph{As a simplified rule of thumb, \cs{lipsum} prints the
% paragraphs as multiple paragraphs, \cs{lipsum*} prints them as a single
% paragraph}.
%
% To change the range of the paragraphs, specify a \meta{paragraph range}, which
% can either be a single number, as in |\lipsum[23]| (which will output the
% 23\textsuperscript{rd} paragraph), or two numbers separated by a dash, as in
% |\lipsum*[9-12]|, which will output the paragraphs nine to
% twelve. \pkg{lipsum} provides 150 paragraphs of \lips\, thus |150| is the
% maximum that should be specified.
%
% \subsection{Outputting Sentences instead of Paragraphs}
% Starting with \pkg{lipsum} v2.0, \cs{lipsum} and \cs{lipsum*} allow to
% output sentences of the \lips\ dummy text instead of paragraphs. To retrieve
% sentences instead of paragraphs, specify a \meta{sentence range} as the second
% optional argument of \cs{lipsum} and \cs{lipsum*}. Note: To be able to
% specify a second optional argument, the first optional argument has to be
% provided.  An empty optional argument is treated as if it was not used
% (thus |\lipsum[]| is equivalent to |\lipsum|), so that sentences from
% the default range may be selected using, for example, |\lipsum[][1-3]|.
%
% Valid inputs for \meta{sentence range} are, again, a single number, as in
% |\lipsum[1][1]|, which will output the first sentence of the first paragraph
% (the famous {\SetLipsumSentenceListEnd{}\itshape»\lipsum[1][1]«}). |\lipsum*[3-7][7-8]| will output the
% seventh and eighth sentence of the paragraphs three to seven.
%
% There are some limitations and remarks on selecting sentences as described
% in the following:
% \begin{itemize}
% \item When sentences are output, they are (by default) separated by
%   \cs{space}. The difference between \cs{lipsum} and \cs{lipsum*} is the
%   token that terminates the paragraph of sentences: Without a package option
%   (and changing the defaults), \cs{lipsum} terminates the sequence of
%   senetences by \cs{par}, \cs{lipsum*} by \cs{space} and vice versa, if
%   \opt{nopar} is specified as package option.
% \item Specifying a \meta{sentence range} which is outside the number of
%   sentences in the specified \meta{paragraph range} will not lead to an
%   error. Instead, sentences which are not available are ignored and nothing
%   is output. For example, |\lipsum[104][9-20]| will only output two
%   sentences since paragraph \#104 consists only of 10 sentences. For the
%   same reason, |\lipsum[104][11-20]| will output nothing.
% \item If you need a lot of sentences, consider the \opt{space} option and
%   |\lipsum[1-150]|. This should be faster.
% \end{itemize}
%
% \section{Advanced or Developer Macros}
% To distinguish between macros for users and macros for, for example, package
% developers, it has been discussed to use different naming schemes. One
% option is that user level macros are all lowercase, while developer-level
% commands are CamelCase. Until version 2.0, \pkg{lipsum} has not yet followed
% this convention. Thus, the old lowercase commands are still available, but
% considered deprecated. They are not described in this section, but in the
% corresponding section in the documented code (section
% \nameref{sec:code:commands}).
%
% \DescribeMacro{\SetLipsumDefault} In order to change the default range of
% paragraphs that is used by \cs{lipsum} and friends, specify
% |\SetLipsumDefault{8}| or |\SetLipsumDefault{123-145}|.
%
% \DescribeMacro{\LipsumPar} To get a single paragraph of the \lips\ dummy
% text, use |\LipsumPar{8}| (for the eighth paragraph). This is similar to
% using |\lips@viii| directly in versions prior to \pkg{lipsum}2.0. the
% difference between |\LipsumPar{8}| and |\lipsum[8]| is that the first directly
% accesses the internal macro that stores the corresponding paragraph, while
% the latter runs the loop that selects the \lips\ paragraphs.
%
% \DescribeMacro{\unpacklipsum} \DescribeMacro{\unpacklipsum*}
% \DescribeMacro{\lipsumexp} The commands \cs{unpacklipsum} and
% \cs{unpacklipsum*} work as \cs{lipsum} and  \cs{lipsum*} and have the same
% two optional arguments, but instead of typesetting the \lips\ paragraphs,
% the commands store them in the macro \cs{lipsumexp} using \tn{edef}, thus,
% everything which can be expanded is expanded.
%
% \subsection{Fine-tuning the output}
% The output of \cs{lipsum}, whether paragraphs or sentences, can be seen as a
% \meta{list} of \meta{item}s, where an item is either a paragraph or a
% sentence. As of version 2.0, \pkg{lipsum} allows to fine-tune which tokens
% are inserted at the beginning of the \meta{list}, at the end of the
% \meta{list}, at the beginning and end of each \meta{item} as well as between
% the single \meta{items}. The resulting list of tokens can be seen in
% Figure~\ref{fig:tokens}.
% \begin{widefigure}
% % { \raggedright
%   \meta{list_s}\dotfill\cs{SetLipsumParListStart}\Arg{tokens}\\
%   \hspace*{1em}\meta{item_1_,_s-outer}{\color{gray}\dotfill
%     \cs{SetLipsumParListOuterItemStart}\Arg{item spec}\Arg{tokens}}\\
%   \hspace*{2em}\meta{item_s}\dotfill\cs{SetLipsumParListItemStart}\Arg{tokens}\\
%   \hspace*{3em}\meta{item_1_,_s-inner}{\color{gray}\dotfill
%     \cs{SetLipsumParListInnerItemStart}\Arg{item spec}\Arg{tokens}}\\
%   \hspace*{4em}\textbf{\meta{item_1}}\\
%   \hspace*{3em}\meta{item_1_,_e-inner}{\color{gray}\dotfill
%     \cs{SetLipsumParListInnerItemEnd}\Arg{item spec}\Arg{tokens}}\\
%   \hspace*{2em}\meta{item_e}\dotfill\cs{SetLipsumParListItemEnd}\Arg{tokens}\\
%   \hspace*{1em}\meta{item_1_,_e-outer}{\color{gray}\dotfill
%     \cs{SetLipsumParListOuterItemEnd}\Arg{item spec}\Arg{tokens}}\\
%   \meta{item-separator}\dotfill\cs{SetLipsumParListItemSeparator}\Arg{tokens}\\[.5\baselineskip]
%   \hspace{1em}\ldots\hfill\hfill\hfill $\uparrow$ {\small lists of paragraphs}
%   $\uparrow$ --- $\downarrow$ {\small
%   lists of sentences} $\downarrow$\\[.5\baselineskip]
%   \meta{item-separator}\dotfill\cs{SetLipsumSentenceListItemSeparator}\Arg{tokens}\\
%   \hspace{1em}\meta{item_N_,_s-outer}{\color{gray}\dotfill
%     \cs{SetLipsumSentenceListOuterItemStart}\Arg{item spec}\Arg{tokens}}\\
%   \hspace{2em}\meta{item_s}\dotfill\cs{SetLipsumSentenceListItemStart}\Arg{tokens}\\
%   \hspace{3em}\meta{item_N_,_s-inner}{\color{gray}\dotfill
%     \cs{SetLipsumSentenceListInnerItemStart}\Arg{item spec}\Arg{tokens}}\\
%   \hspace*{4em}\textbf{\meta{item_N}}\\
%   \hspace*{3em}\meta{item_N_,_e-inner}{\color{gray}\dotfill
%     \cs{SetLipsumSentenceListInnerItemEnd}\Arg{item spec}\Arg{tokens}}\\
%   \hspace*{2em}\meta{item_e}\dotfill\cs{SetLipsumSentenceListItemEnd}\Arg{tokens}\\
%   \hspace*{1em}\meta{item_N_,_e-outer}{\color{gray}\dotfill
%     \cs{SetLipsumSentenceListOuterItemEnd}\Arg{item spec}\Arg{tokens}}\\
%     \meta{list_e}\dotfill\cs{SetLipsumSentenceListEnd}\Arg{tokens}
%   }
%     \begin{multicols}{2}\sffamily\bfseries
% \caption{Places where additional tokens can be inserted in the output. $N$
% indicates the last \meta{item}, `\ldots' indicate the same structure as for the
% first and last \meta{item}. Commands colored gray are not yet implemented. The
% upper part displays the commands for lists of paragraphs, the lower part for
% lists of sentences (also indicated by the labelled arrows in the middle). }
% \label{fig:tokens}
%   \end{multicols}
%
%
% \end{widefigure}
% \DescribeMacro{\SetLipsumParListStart}\DescribeMacro{\SetLipsumParListStart*}
% \DescribeMacro{\SetLipsumParListEnd}\DescribeMacro{\SetLipsumParListEnd*}
% \DescribeMacro{\SetLipsumSentenceListStart}\DescribeMacro{\SetLipsumSentenceListStart*}
% \DescribeMacro{\SetLipsumSentenceListEnd}\DescribeMacro{\SetLipsumSentenceListEnd*}
% \pkg{lipsum} allows to specify all of the tokens in the list indicated
% above except for the item-specific inner and outer \meta{items} (shown as
% \meta{item_N_,_s-outer/inner}, \meta{item_N_,_e-outer/inner} above), which
% remain to be implemented.
%
% The macros that enable setting these tokens are all available in a normal
% and in a starred version, they apply to \cs{lipsum} and \cs{unpacklipsum} or
% \cs{lipsum*} and \cs{unpacklipsum*}, respectively.
%
%
% The macro \cs{SetLipsumParListStart}\Arg{tokens} and its starred variant
% insert \meta{tokens} at the very beginning of the list of paragraphs
% (\meta{list_s} in Figure~\ref{fig:tokens}). \cs{SetLipsumSentenceListStart}
% and \cs{SetLipsumSentenceListStart*} do the same for the list of
% sentences. The corresponding macros that allow to input \meta{tokens} at the
% very end of the output (\meta{list_e} in Figure~\ref{fig:tokens}) are
% \cs{SetLipsumParListEnd} (and its starred variant) and
% \cs{SetLipsumSentenceListEnd} (and its starred variant).
%
% As a shorthand, the commands
% \begin{macrolist}
%   \item \cs{SetLipsumParListSurrounders}\Arg{start}\Arg{end}\DescribeMacro{\SetLipsumParListSurrounders}
%   \item \cs{SetLipsumParListSurrounders*}\Arg{start}\Arg{end}\DescribeMacro{\SetLipsumParListSurrounders*}
%   \item \cs{SetLipsumSentenceListSurrounders}\Arg{start}\Arg{end}\DescribeMacro{\SetLipsumSentenceListSurrounders}
%   \item \cs{SetLipsumSentenceListSurrounders*}\Arg{start}\Arg{end}\DescribeMacro{\SetLipsumSentenceListSurrounders*}
% \end{macrolist}
% are available to set the \meta{tokens} for the start and end position with a
% single command.
%
% \DescribeMacro{\SetLipsumParListItemStart}
% \DescribeMacro{\SetLipsumParListItemStart*}
% \DescribeMacro{\SetLipsumParListItemEnd} \DescribeMacro{\SetLipsumParListItemEnd*}
% \DescribeMacro{\SetLipsumSentenceListItemStart}
% \DescribeMacro{\SetLipsumSentenceListItemStart*}
% \DescribeMacro{\SetLipsumSentenceListItemEnd}
% \DescribeMacro{\SetLipsumSentenceListItemEnd*}
% To add \meta{tokens} in front of every \meta{item}, the commands
% \cs{SetLipsumParListItemStart} (and its starred variant) and
% \cs{SetLipsumSentenceListItemStart} are available. To add tokens after every
% \meta{item}, the corresponding commands are \cs{SetLipsumParListItemEnd}
% (and its starred variant) and \cs{SetLipsumSentenceListItemStart} (and its
% starred variant).
%
% Again, there are
% commands that allow to set a pair of \meta{tokens} to surround every item:
% \begin{macrolist}
% \item \cs{SetLipsumParListItemSurrounders}\Arg{start}\Arg{end}\DescribeMacro{\SetLipsumParListItemSurrounders}
% \item \cs{SetLipsumParListItemSurrounders*}\Arg{start}\Arg{end}\DescribeMacro{\SetLipsumParListItemSurrounders*}
% \item \cs{SetLipsumSentenceListItemSurrounders}\Arg{start}\Arg{end}\DescribeMacro{\SetLipsumSentenceListItemSurrounders}
% \item \DescribeMacro{\SetLipsumSentenceListItemSurrounders*} \cs{SetLipsumSentenceListItemSurrounders*}\Arg{start}\Arg{end}
%
% \end{macrolist}
%
% \DescribeMacro{\SetLipsumParListItemSeparator}
% \DescribeMacro{\SetLipsumParListItemSeparator*}
% \DescribeMacro{\SetLipsumSentenceListItemSeparator}
% \DescribeMacro{\SetLipsumSentenceListItemSeparator*} To insert \meta{tokens}
% between the single \meta{item}s, the commands
% \cs{SetLipsumParListItemSeparator} (with its starred variant) and
% \cs{SetLipsumSentenceListItemSeparator} (also with its starred variant) are
% available. As can be seen in Figure~\ref{fig:tokens}, these tokens are
% inserted after the tokens inserted by |\...ListItemEnd| and before the
% following |\...ListItemStart|.
%
% \DescribeMacro{\LipsumProtect} To insert \meta{tokens} that survive the
% expansion by \cs{unpacklipsum} and \cs{unpacklipsum*}, \pkg{lipsum} provides
% \cs{LipsumProtect}\Arg{tokens}. See the example in the
% \nameref{sec:foreword2.0}.
%
% The macros introduced above can be used to turn the output of \cs{lipsum},
% for example, into a list, as exemplified in Figure~\ref{fig:list-expl}.
% \begin{widefigure}
% \begin{exploutputbox}
%   \begin{verbatim}
%
% \SetLipsumSentenceListSurrounders{\begin{itemize}}{\end{itemize}}
% \SetLipsumSentenceListItemStart{\item}
% \lipsum[10][1-2]
%   \end{verbatim}
%   \mdfsubtitle{Output}
% \SetLipsumSentenceListSurrounders{\begin{itemize}}{\end{itemize}}
% \SetLipsumSentenceListItemStart{\item}
% \lipsum[10][1-2]
% \end{exploutputbox}
%   \sffamily\bfseries
%   \caption{Turning the output of \cs{lipsum} into a list using inserted tokens.}
%   \label{fig:list-expl}
% \end{widefigure}
% The gray commands in Figure~\ref{fig:tokens} are thought to allow inserting
% \meta{tokens} around a specific \meta{item}, but they remain to be implemented. One
% way to access a specific \meta{item}  in a list is shown in
% Figure~\ref{fig:seconditem}, but other, maybe more elegant ways are
% conceivable.
%
% To quickly reset the \meta{tokens} inserted by the above commands to their
% default values, \pkg{lipsum} provides \DescribeMacro{\LipsumRestoreParList}
% \cs{LipsumRestoreParList} (for lists of paragraphs),
% \DescribeMacro{\LipsumRestoreSentenceList} \cs{LipsumRestoreSentenceList} (for lists of
% sentences) and \DescribeMacro{\LipsumRestoreAll} \cs{LipsumRestoreAll} for
% both lists.
% \begin{widefigure}
% \begin{exploutputbox}
%   \begin{verbatim}
% \newcounter{itemcount}
% \setcounter{itemcount}{0}
% \SetLipsumParListItemSurrounders{%
%    \stepcounter{itemcount}
%    \ifnum\value{itemcount}=2\begingroup\sffamily\fi
% }{
%    \ifnum\value{itemcount}=2\endgroup\fi
% }
% \lipsum[110-112]
%   \end{verbatim}
%   \mdfsubtitle{Output}
% \newcounter{itemcount}
% \setcounter{itemcount}{0}
% \SetLipsumParListItemSurrounders{%
%    \stepcounter{itemcount}
%    \ifnum\value{itemcount}=2\begingroup\sffamily\fi
% }{
%    \ifnum\value{itemcount}=2\endgroup\fi
%  }
% \setlength{\parindent}{1em}\small
% \lipsum[110-112]
% \end{exploutputbox}\sffamily\bfseries
% \caption{Styling the second \meta{item} of a list.}\label{fig:seconditem}
% \end{widefigure}
% \subsection{Loading and defining different texts}\label{sec:other-texts}
% Starting with \pkg{lipsum}2.2, a simple interface is provided to define and
% load other texts for the output of \cs{lipsum} and friends. This interface
% can, for example, be used to implement dummy texts in different languages
% without re-coding the logic implemented by \pkg{lipsum}. In order to provide
% a new text that will be used by lipsum, define the text by using a set of
% \DescribeMacro{\NewLipsumPar}\cs{NewLipsumPar}\Arg{paragraph} commands in a
% file with the ending |.ltd.tex| (|ltd| means \emph{lipsum text
% definition}\footnote{To avoid name clashes with files using general
% languages as names, I chose to introduce the |.ltd.tex| file ending. I did
% not find a file with this ending in my |texmf|-tree, so I guess it is
% safe.}) to a location where your \TeX-system will find it. The
% \meta{paragraph}-argument is a single paragraph of the new text. Thus, the
% first occurence of \cs{NewLipsumPar} defines the first paragraph, the second
% occurence the second paragraph and so on.
%
% To specify the new text as output for \cs{lipsum} and friends, use
% \DescribeMacro{\SetLipsumText}\cs{SetLipsumText}\Arg{filename}, where
% \meta{filename} is the name of the file without the ending |.ltd.tex|, as
% given in the table below. \pkg{lipsum} ships with three texts:
%
% \begin{table}[ht]
% \begin{wide}
% \begin{tabularx}{\textwidth}{llX}
%   \toprule
%     File (|.ltd.tex|) & Source & Description \\
%   \midrule
%     |lipsum|
%       & James Wilson
%         & Contains the standard \lips-dummy text, obtained from
%           \url{https://www.lipsum.com} (default). \\
%     |cicero|
%       & GH user \href{https://github.com/svenper}{svenper}
%         & Contains the speech by Cicero which inspired the \lips-dummy text. \\
%     |lipsum-cs|
%       & Ondřej Macek
%         & Dummy text in the Czech language, obtained from Petr Staníček's website:
%           \url{https://www.wellstyled.com/tools/dummy-cz}. \\
%   \bottomrule
% \end{tabularx}
% \end{wide}
% \end{table}
%
% In contrast to the default \lips\ text,
% the |cicero| text, which can be selected by |\SetLipsumText{cicero}|, is true
% latin, and thus is properly hyphenated by, for example, the \pkg{babel}
% package with the language |latin| loaded (and
% selected). Figure~\ref{fig:cicero} shows how to load and use the text of
% Cicero's speech (note that the use of babel is optional).
%
% \begin{widefigure}
% \begin{exploutputbox}
%   \begin{verbatim}
% \lipsum[1][1]
% \SetLipsumText{cicero}
% \selectlanguage{latin} % optional, requires babel.sty with option latin.
% \lipsum[1]
%   \end{verbatim}
%   \mdfsubtitle{Output}
% \lipsum[1][1]
% \MakePercentComment\SetLipsumText{cicero}\MakePercentIgnore
% \selectlanguage{latin}
% \hspace*{1em}\lipsum[1]
% \end{exploutputbox}
% \MakePercentComment\SetLipsumText{lipsum}\MakePercentIgnore
%   \sffamily\bfseries
%   \caption{Selecting and using the text of Cicero's speech.}
%   \label{fig:cicero}
% \end{widefigure}
% \subsubsection{Limitations of and comments on the interface}
% \cs{SetLipsumText} more or less just uses an \cs{input} or, to be more
% precise, the \LaTeX3-variant \cs{file_input:n}, to load the |.ltd.tex|
% file. This means, that the file is not necessarily loaded in the preamble of
% the document and thus the contents of the file underlie the respective
% restrictions. Most importantly, no additional packages can be loaded. Thus,
% if your text requires additional packages, the documentation should state
% that the user has to load the packages. Since \pkg{lipsum} is a package for
% developers and commonly used for examples, it will not load any packages
% except the ones required by \pkg{lipsum} itself to be usable for a maximum
% of developers.
%
% Futhermore, the commands used to typeset the new texts are still
% \cs{lipsum}, \cs{lipsum*}, \cs{unpacklipsum} and so on and the commands to
% tune the output are still \cs{SetLipsumParListStart} and friends and no way
% is provided to easily generate a set of commands where the
% |lipsum| (or |Lipsum|) part of the command names is exchanged by, for
% example, |cicero| or |Cicero|.
%
% Nonetheless, if you want to write a new package instead of just providing a
% new dummy text, maybe because it requires a certain package to be loaded, or
% because you want to have a different command than \cs{lipsum}, this can be
% as easy as this\footnote{The following code has never been tested, it was
% just written from mind as an example.}:
% \begin{verbatim}
% \ProvidesPackage{mydummytext}
% \RequirePackage{lipsum}
% \SetLipsumText{mydummytext}
% \end{verbatim}
% To make the text accesible via a command \cs{mydummytext}, simply use
% \cs{let} to copy the definition of \cs{lipsum}:
% \begin{verbatim}
% \let\mydummytext\lipsum
% \end{verbatim}
% Note that this works fine with one exception: \cs{unpacklipsum} and
% \cs{unpacklipsum*} store their content in \cs{lipsumexp}, and they will keep
% doing so if you simply copy them using \cs{let}. Thus, to change
% \cs{lipsumexp} to, for example, \cs{ciceroexp}, you will have to re-code the
% \cs{unpacklipsum} command.
%
% I would, however, suggest to keep the \cs{lipsum}-commands since they are
% known to provide dummy text and one can easily refer to this
% documentation. But in the end this decision---of course---remains to
% the author of the new package.
%
% \end{documentation}
%
% \begin{implementation}
%
% \section{\pkg{lipsum} Implementation}
%
%    \begin{macrocode}
%<*package>
%<@@=lipsum>
%    \end{macrocode}
%
% \subsection{Variables}
%
% \begin{variable}{\g_@@_paragraph_seq}
% The sequence that stores all the paragraphs.
%    \begin{macrocode}
\seq_new:N \g_@@_paragraph_seq
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\g_lipsum_default_range_tl}
% The default range for lipsum paragraphs.
%    \begin{macrocode}
\tl_new:N \g_lipsum_default_range_tl
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\l_@@_output_tl}
%   This variables is used to store the token list containing the
%   selected output.
%    \begin{macrocode}
\tl_new:N \l_@@_output_tl
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\g_@@_text_str}
%   Holds the current text loaded for the output of \cs{lipsum} and
%   friends. Used to avoid loading the same text definition if it is
%   already used.
%    \begin{macrocode}
\str_new:N \g_@@_text_str
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\q_@@_mark,\s_@@}
%   Quark and scan mark used throughout the package.
%    \begin{macrocode}
\quark_new:N \q_@@_mark
\scan_new:N \s_@@
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\l_@@_tmpa_int,\l_@@_tmpb_int}
%   Scratch variables.
%    \begin{macrocode}
\int_new:N \l_@@_tmpa_int
\int_new:N \l_@@_tmpb_int
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}{\@@_tmp:w}
%   Scratch macro.
%    \begin{macrocode}
\cs_new_eq:NN \@@_tmp:w ?
%    \end{macrocode}
% \end{macro}
%
% \begin{variable}{
%     \l_@@_par_list_end_nostar_tl,
%     \l_@@_par_list_end_star_tl,
%     \l_@@_par_list_end_tl,
%     \l_@@_par_list_itemend_nostar_tl,
%     \l_@@_par_list_itemend_star_tl,
%     \l_@@_par_list_itemend_tl,
%     \l_@@_par_list_itemseparator_nostar_tl,
%     \l_@@_par_list_itemseparator_star_tl,
%     \l_@@_par_list_itemseparator_tl,
%     \l_@@_par_list_itemstart_nostar_tl,
%     \l_@@_par_list_itemstart_star_tl,
%     \l_@@_par_list_itemstart_tl,
%     \l_@@_par_list_start_nostar_tl,
%     \l_@@_par_list_start_star_tl,
%     \l_@@_par_list_start_tl,
%     \l_@@_sentence_list_end_nostar_tl,
%     \l_@@_sentence_list_end_star_tl,
%     \l_@@_sentence_list_end_tl,
%     \l_@@_sentence_list_itemend_nostar_tl,
%     \l_@@_sentence_list_itemend_star_tl,
%     \l_@@_sentence_list_itemend_tl,
%     \l_@@_sentence_list_itemseparator_nostar_tl,
%     \l_@@_sentence_list_itemseparator_star_tl,
%     \l_@@_sentence_list_itemseparator_tl,
%     \l_@@_sentence_list_itemstart_nostar_tl,
%     \l_@@_sentence_list_itemstart_star_tl,
%     \l_@@_sentence_list_itemstart_tl,
%     \l_@@_sentence_list_start_nostar_tl,
%     \l_@@_sentence_list_start_star_tl,
%     \l_@@_sentence_list_start_tl,
%   }
%   These variables store the separators and delimiters added around the
%   paragraphs and sentences, in the starred or nonstarred variants, as
%   well as the generic version for runtime usage.
%    \begin{macrocode}
\clist_map_inline:nn { par,sentence }
  {
    \clist_map_inline:nn { start,itemstart,itemseparator,itemend,end }
      {
        \clist_map_inline:nn { { },_star,_nostar }
          { \tl_new:c { l_@@_#1_list_##1####1_tl } }
      }
  }
%    \end{macrocode}
% \end{variable}
%
% \subsection{Developer interface}
%
% \begin{macro}{\@@_parse_range_arg:nNN}
%   Parses an argument that may be a single integer or an integer range
%   separated by a |-|, and stores them into the integer registers |#2|
%   and |#3|.  If a number is blank, zero is used.  If only a single
%   number is given, |#3| is set equal to |#2|.
%    \begin{macrocode}
\cs_new_protected:Npn \@@_parse_range_arg:nNN #1 #2 #3
  {
    \tl_if_blank:nTF {#1}
      { \@@_parse_range_arg:eNN { \g_lipsum_default_range_tl } #2 #3 }
      {
        \exp_last_unbraced:No \@@_parse_range_arg:wNN
          \tl_to_str:n { #1 - - } \s_@@ #2 #3 {#1}
      }
  }
\cs_new_protected:Npn \@@_parse_range_arg:wNN #1 - #2 - #3 \s_@@ #4 #5
  {
    \str_if_eq:nnTF {#3} { - }
      {
        \@@_int_set:Nn #4 {#1}
        \@@_int_set:Nn #5 {#2}
        \use_none:n
      }
      {
        \tl_if_empty:nTF {#3}
          {
            \@@_int_set:Nn #4 {#1}
            \int_set_eq:NN #5 #4
            \use_none:n
          }
          { \msg_error:nnn { lipsum } { invalid-range } }
      }
  }
\cs_new_protected:Npn \@@_int_set:Nn #1 #2
  { \int_set:Nn #1 { \tl_if_blank:nT {#2} { 0 } #2 } }
\cs_generate_variant:Nn \@@_parse_range_arg:nNN { e }
%    \end{macrocode}
% \end{macro}
%
% \begin{function}{\lipsum_get_range:nn}
% \begin{function}{
%     \@@_build_list:nn,
%     \@@_build_list_aux:n,
%     \@@_get_paragraph:ww,
%     \@@_get_paragraph_end:w,
%   }
%   \begin{syntax}
%     \cs{lipsum_get_range:nn}\Arg{number_1}\Arg{number_2}
%   \end{syntax}
%   Expands to the paragraphs between \meta{number_1} and
%   \meta{number_2} with the proper delimiters added.  Text is returned
%   in \cs{exp_not:n}, so this macro can be safely used in an \cs{edef}.
%    \begin{macrocode}
\cs_new:Npn \lipsum_get_range:nn #1 #2
  {
    \exp_not:V \l_@@_par_list_start_tl
    \use:e
      {
        \exp_not:N \@@_get_paragraph:ww
        \@@_build_list:nn {#1} {#2}
        \exp_not:N \q_@@_mark ; \exp_not:N \q_@@_mark ; \s_@@
      }
    \exp_not:V \l_@@_par_list_end_tl
  }
\cs_new:Npn \@@_build_list:nn #1 #2
  { \int_step_function:nnN {#1} {#2} \@@_build_list_aux:n }
\cs_new:Npn \@@_build_list_aux:n #1 { #1 ; }
\cs_new:Npn \@@_get_paragraph:ww #1 ; #2 ;
  {
    \if_meaning:w \q_@@_mark #2
      \if_meaning:w \q_@@_mark #1
        \@@_get_paragraph_end:w
      \else:
        \lipsum_get_paragraph:n {#1}
      \fi:
    \else:
      \lipsum_get_paragraph:n {#1}
      \exp_not:V \l_@@_par_list_itemseparator_tl
    \fi:
    \@@_get_paragraph:ww #2 ;
  }
\cs_new:Npn \@@_get_paragraph_end:w #1 \s_@@ { \fi: \fi: }
%    \end{macrocode}
% \end{function}
%
% \begin{function}{\lipsum_get_paragraph:n}
%   \begin{syntax}
%     \cs{lipsum_get_paragraph:n}\Arg{number}
%   \end{syntax}
%   Expands to the paragraph \meta{number} with the proper delimiters
%   added.  Text is returned in \cs{exp_not:n}, so this macro can be
%   safely used in an \cs{edef}.
%    \begin{macrocode}
\cs_new:Npn \lipsum_get_paragraph:n #1
  {
    \exp_not:V \l_@@_par_list_itemstart_tl
    \seq_item:Nn \g_@@_paragraph_seq {#1}
    \exp_not:V \l_@@_par_list_itemend_tl
  }
%    \end{macrocode}
% \end{function}
%
% \begin{function}{\@@_ensure_parsable_output:}
%   \begin{syntax}
%     \cs{@@_ensure_parsable_output:}
%   \end{syntax}
%   To ensure that the list of paragraphs can be parsed into a list of
%   sentences, the tokens between the single \meta{item}s have to macth
%   a pre-defined pattern. This commands sets the tokens accordingly.
%    \begin{macrocode}
\cs_new_protected:Nn \@@_ensure_parsable_output:
  {
    \tl_set:Nn \l_@@_par_list_itemseparator_tl { ~ }
    \tl_clear:N \l_@@_par_list_itemstart_tl
    \tl_clear:N \l_@@_par_list_itemend_tl
    \tl_clear:N \l_@@_par_list_start_tl
    \tl_clear:N \l_@@_par_list_end_tl
  }
%    \end{macrocode}
% \end{function}
%
% \begin{function}{\lipsum_get_sentences:nnn,\lipsum_get_sentences:nnV}
%   \begin{syntax}
%     \cs{lipsum_get_sentences:nnn}\Arg{number_1}\Arg{number_2}\Arg{text}
%   \end{syntax}
%   Expands to the sentences numbered between \meta{number_1} and
%   \meta{number_2}, inclusive, contained in the \meta{text}, and adding
%   the proper separators.
%    \begin{macrocode}
\cs_new:Npn \lipsum_get_sentences:nnn #1 #2 #3
  {
    \exp_not:V \l_@@_sentence_list_start_tl
    \@@_get_sentences:nnnw { 1 } {#1} {#2} #3 ~ \q_@@_mark .~ \s_@@
    \exp_not:V \l_@@_sentence_list_end_tl
  }
\cs_new:Npn \@@_get_sentences:nnnw #1 #2 #3 #4 .~
  {
    \int_compare:nNnT {#1} > {#3} { \@@_get_sentences_end:w }
    \if_meaning:w \q_@@_mark #4
      \exp_after:wN \@@_get_sentences_end:w
    \else:
      \int_compare:nNnF {#1} < {#2}
        {
          \int_compare:nNnF {#1} = {#2}
            { \exp_not:V \l_@@_sentence_list_itemseparator_tl }
          \exp_not:V \l_@@_sentence_list_itemstart_tl
          \exp_not:n { #4 . }
          \exp_not:V \l_@@_sentence_list_itemend_tl
        }
    \fi:
    \exp_args:Nf \@@_get_sentences:nnnw { \int_eval:n { #1 + 1 } }
      {#2} {#3}
  }
\cs_new:Npn \@@_get_sentences_end:w #1 \s_@@ { }
\cs_generate_variant:Nn \lipsum_get_sentences:nnn { nnV }
%    \end{macrocode}
% \end{function}
%
% \begin{function}{\@@_protect:n}
%   Internal command for the user-level \cs{LipsumProtect}.
%    \begin{macrocode}
\cs_new:Npn \@@_protect:n #1 { \exp_not:n {#1} }
%    \end{macrocode}
% \end{function}
%
% \begin{macro}{\LipsumProtect}
%   \begin{syntax}
%     \cs{LipsumProtect}\Arg{tokens}
%   \end{syntax}
%   Protects \meta{tokens} from being expanded when processed by
%   \cs{unpacklipsum}.
%    \begin{macrocode}
\cs_new:Npn \LipsumProtect #1 { \@@_protect:n {#1} }
%    \end{macrocode}
% \end{macro}
%
% \begin{function}{
%     \@@_set_surrounding_tokens_star:,
%     \@@_set_surrounding_tokens_nostar:,
%   }
%   These commands copy the user-defined tokens to the token lists used
%   by the commands that compose the list of paragraphs or sentences.
%    \begin{macrocode}
\cs_set:Npn \@@_tmp:w #1 #2
  {
    \tl_set_eq:NN
      \exp_not:c { l_@@_par_list_#2_tl }
      \exp_not:c { l_@@_par_list_#2_#1_tl }
    \tl_set_eq:NN
      \exp_not:c { l_@@_sentence_list_#2_tl }
      \exp_not:c { l_@@_sentence_list_#2_#1_tl }
  }
\cs_new_protected:Npx \@@_set_surrounding_tokens_star:
  {
    \tl_map_tokens:nn
      { { start } { itemstart } { itemseparator } { itemend } { end } }
      { \@@_tmp:w { star } }
  }
\cs_new_protected:Npx \@@_set_surrounding_tokens_nostar:
  {
    \tl_map_tokens:nn
      { { start } { itemstart } { itemseparator } { itemend } { end } }
      { \@@_tmp:w { nostar } }
  }
%    \end{macrocode}
% \end{function}
%
% \subsection{User- and developer-level commands}\label{sec:code:commands}
%
% \begin{macro}{\NewLipsumPar}
%  Developer-Level macro to add a paragraph to the dummy text used by
%  \cs{lipsum} and related commands. To specify a new dummy text, see
%  section~\ref{sec:other-texts}.
%  \begin{syntax}
%    \cs{NewLipsumPar}\Arg{content}
%  \end{syntax}
% \begin{arguments}
%   \item The \meta{content} of the paragraph. In contrast to
%   previous versions, \pkg{lipsum}2.0 does not store a macro that is typeset
%   at the end of the paragraph.
% \end{arguments}
% Implemented as follows:
%    \begin{macrocode}
\NewDocumentCommand \NewLipsumPar { m }
  { \seq_gput_right:Nn \g_@@_paragraph_seq {#1} }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\LipsumPar}
%   Macro to typeset a single paragraph of \lips\ Was not officially
%   available in version prior to 2.0.
%   \begin{syntax}
%     \cs{LipsumPar}\Arg{number}
%   \end{syntax}
%   \begin{arguments}
%     \item Number of the paragraph to typeset.
%   \end{arguments}
% Implemented as follows:
%    \begin{macrocode}
\NewDocumentCommand \LipsumPar { m }
  { \seq_item:Nn \g_@@_paragraph_seq {#1} \par }
%    \end{macrocode}
% \end{macro}
%
% \subsection{Tokens surrounding the \lips\ content}
%
% \begin{macro}{\@@_element_set:nnn}
%   A general macro for setting starred/non-starred versions of several
%   elements used between chunks of dummy text. Arguments are:
%   \begin{arguments}
%     \item Element name;
%     \item Boolean true or false if the |*| variant was used;
%     \item Value to set the element to.
%   \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Npn \@@_element_set:nnn #1 #2 #3
  { \tl_set:co { l_@@_ #1 _ \IfBooleanF {#2} { no } star _tl } {#3} }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\SetLipsumParListStart,\SetLipsumSentenceListStart}
%   Sets the \meta{tokens} to be inserted at the beginning of the
%   paragraph or sentence list.
%    \begin{macrocode}
\NewDocumentCommand \SetLipsumParListStart { s +m }
  { \@@_element_set:nnn { par_list_start } {#1} {#2} }
\NewDocumentCommand \SetLipsumSentenceListStart { s +m }
  { \@@_element_set:nnn { sentence_list_start } {#1} {#2} }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\SetLispumParListEnd,\SetLispumSentenceListEnd}
%   Sets the \meta{tokens} to be inserted after the paragraph or
%   sentence list.
%    \begin{macrocode}
\NewDocumentCommand \SetLipsumParListEnd { s +m }
  { \@@_element_set:nnn { par_list_end } {#1} {#2} }
\NewDocumentCommand \SetLipsumSentenceListEnd { s +m }
  { \@@_element_set:nnn { sentence_list_end } {#1} {#2} }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\SetLipsumParListSurrounders,\SetLipsumSentenceListSurrounders}
%   These macros are short-hands for setting the start and end tokens
%   surrounding a paragraph or sentence list.
%    \begin{macrocode}
\NewDocumentCommand \SetLipsumParListSurrounders { s +m +m }
  {
    \@@_element_set:nnn { par_list_start } {#1} {#2}
    \@@_element_set:nnn { par_list_end } {#1} {#3}
  }
\NewDocumentCommand \SetLipsumSentenceListSurrounders { s +m +m }
  {
    \@@_element_set:nnn { sentence_list_start } {#1} {#2}
    \@@_element_set:nnn { sentence_list_end } {#1} {#3}
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\SetLipsumParListItemStart,\SetLipsumSentenceListItemStart}
%   Sets the \meta{tokens} inserted before every \meta{item} in the
%   paragraph or sentence list.
%    \begin{macrocode}
\NewDocumentCommand \SetLipsumParListItemStart { s +m }
  { \@@_element_set:nnn { par_list_itemstart } {#1} {#2} }
\NewDocumentCommand \SetLipsumSentenceListItemStart { s +m }
  { \@@_element_set:nnn { sentence_list_itemstart } {#1} {#2} }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\SetLipsumParListItemEnd,\SetLipsumSentenceListItemEnd}
%   Sets the \meta{tokens} inserted after every \meta{item} in the
%   paragraph or sentence list.
%    \begin{macrocode}
\NewDocumentCommand \SetLipsumParListItemEnd { s +m }
  { \@@_element_set:nnn { par_list_itemend } {#1} {#2} }
\NewDocumentCommand \SetLipsumSentenceListItemEnd { s +m }
  { \@@_element_set:nnn { sentence_list_itemend } {#1} {#2} }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\SetLipsumParListItemSurrounders,\SetLipsumSentenceListItemSurrounders}
%   Short-hands for setting the \meta{token}s surrounding a single list
%   \meta{item}.
%    \begin{macrocode}
\NewDocumentCommand \SetLipsumParListItemSurrounders { s +m +m }
  {
    \@@_element_set:nnn { par_list_itemstart } {#1} {#2}
    \@@_element_set:nnn { par_list_itemend } {#1} {#3}
  }
\NewDocumentCommand \SetLipsumSentenceListItemSurrounders { s +m +m }
  {
    \@@_element_set:nnn { sentence_list_itemstart } {#1} {#2}
    \@@_element_set:nnn { sentence_list_itemend } {#1} {#3}
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\SetLipsumParListItemSeparator,\SetLipsumSentenceListItemSeparator}
%   Sets the \meta{tokens} to be inserted between two \meta{item}s of a
%   paragraph or sentence list.
%    \begin{macrocode}
\NewDocumentCommand \SetLipsumParListItemSeparator { s +m }
  { \@@_element_set:nnn { par_list_itemseparator } {#1} {#2} }
\NewDocumentCommand \SetLipsumSentenceListItemSeparator { s +m }
  { \@@_element_set:nnn { sentence_list_itemseparator } {#1} {#2} }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_store_surrounding_tokens:,\@@_restore_surrounding_tokens:}
%   Stores the accessory items added around paragraphs and sentences into
%   a temporary location for later restoring to avoid the need for grouping.
%    \begin{macrocode}
\cs_new_protected:Npn \@@_store_surrounding_tokens:
  {
    \cs_set:Npn \@@_tmp:w ##1 ##2
      {
        \tl_set:Nn \exp_not:c { l_@@_ ##1 _list_ ##2 _tl }
          { \exp_not:v { l_@@_ ##1 _list_ ##2 _tl } }
      }
    \cs_set_protected:Npx \@@_restore_surrounding_tokens:
      {
        \tl_map_tokens:nn
          { { start } { itemstart } { itemseparator } { itemend } { end } }
          { \@@_tmp:w { par } }
        \tl_map_tokens:nn
          { { start } { itemstart } { itemseparator } { itemend } { end } }
          { \@@_tmp:w { sentence } }
      }
  }
\cs_new_protected:Npn \@@_restore_surrounding_tokens:
  { \prg_do_nothing: }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\SetLipsumDefault}
%   Command to change the default range used by \cs{lipsum} and friends.
%   \begin{syntax}
%     \cs{SetLipsumDefault}\Arg{range}
%   \end{syntax}
%   \begin{arguments}
%     \item[\meta{range}] Range to be used as default.
%   \end{arguments}
% Implemented as:
%    \begin{macrocode}
\NewDocumentCommand \SetLipsumDefault { m }
  {
    \@@_parse_range_arg:eNN {#1} \l_@@_tmpa_int \l_@@_tmpb_int
    \tl_gset:Nx \g_lipsum_default_range_tl
      { \int_use:N \l_@@_tmpa_int - \int_use:N \l_@@_tmpb_int }
  }
%    \end{macrocode}
% \end{macro}
%
% The following macros are considered to be user-level commands and thus
% all lower-case.
%
% \begin{macro}{\lipsum}
%   \begin{syntax}
%     \cs{lipsum}\oarg{paragraph range}\oarg{sentence range}
%     \cs{lipsum*}\oarg{paragraph range}\oarg{sentence range}
%   \end{syntax}
%
%   \begin{arguments}
%     \item Range-like string that specifies the number of the
%       paragraphs taken from \lips\ If omitted, the value set by
%       \cs{SetLipsumDefault} is used, which defaults to |1-7|.
%     \item Sentences to be typeset from the range selected by
%       \meta{paragraph range}. If sentences outside the number of
%       sentences in \meta{paragraph range} are specified, only existing
%       sentences are typeset.
%   \end{arguments}
%   The difference between \cs{lipsum} and \cs{lipsum*} is the token(s)
%   that are inserted after each paragraph (only if called without the
%   second optional argument).
%
%   \cs{lipsum} and \cs{unpacklipsum} have the same interface and do
%   almost the same thing, so both are implemented using a common macro
%   \cs{@@_fetch_do:nnnn} that does the heavy-lifting, and at the end
%   executes the code in |#4|.
%    \begin{macrocode}
\NewDocumentCommand \lipsum { s O { \g_lipsum_default_range_tl } o }
  { \@@_fetch_do:nnnn {#1} {#2} {#3} { \tl_use:N ##1 } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\unpacklipsum,\lipsumexp}
%   This command does the same as \cs{lipsum}, but instead of
%   typesetting the paragraphs or sentences, it stores the expanded
%   content in the \cs{lipsumexp} token list. The tokens between items
%   of the list, set, for example, by using the package option
%   \opt{space} or by using the \cs{SetLipsum...List} commands, are
%   |x|-expanded.
%   \begin{syntax}
%     \cs{unpacklipsum}\oarg{paragraph range}\oarg{sentence range}\\
%     \cs{unpacklipsum*}\oarg{paragraph range}\oarg{sentence range}\\
%     ...
%     \cs{lipsumexp}
%   \end{syntax}
%    \begin{macrocode}
\NewDocumentCommand \unpacklipsum { s O { \g_lipsum_default_range_tl } o }
  {
    \@@_fetch_do:nnnn {#1} {#2} {#3}
      { \cs_gset:Npx \lipsumexp { \tl_use:N ##1 } }
  }
\cs_new_eq:NN \lipsumexp \prg_do_nothing:
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_fetch_do:nnnn}
%   This is the main macro for \cs{lipsum} and \cs{unpacklipsum}.
%   It parses the paragraph range, sets the sentence/paragraph
%   separators, then acts accordingly if a sentence range was provided.
%    \begin{macrocode}
\cs_new_protected:Npn \@@_fetch_do:nnnn #1 #2 #3 #4
  {
    \cs_set_protected:Npn \@@_do:N ##1 {#4}
    \@@_parse_range_arg:eNN {#2} \l_@@_tmpa_int \l_@@_tmpb_int
    \@@_store_surrounding_tokens:
    \IfBooleanTF {#1}
      { \@@_set_surrounding_tokens_star: }
      { \@@_set_surrounding_tokens_nostar: }
    \IfNoValueTF {#3}
      {
        \tl_set:Nx \l_@@_output_tl
          { \lipsum_get_range:nn { \l_@@_tmpa_int } { \l_@@_tmpb_int } }
        \@@_restore_surrounding_tokens:
        \@@_do:N \l_@@_output_tl
      }
      {
        \@@_ensure_parsable_output:
        \tl_set:Nx \l_@@_output_tl
          { \lipsum_get_range:nn { \l_@@_tmpa_int } { \l_@@_tmpb_int } }
        \@@_parse_range_arg:eNN {#3} \l_@@_tmpa_int \l_@@_tmpb_int
        \tl_set:Nx \l_@@_output_tl
          {
            \lipsum_get_sentences:nnV
              { \l_@@_tmpa_int } { \l_@@_tmpb_int } \l_@@_output_tl
          }
        \@@_restore_surrounding_tokens:
        \@@_do:N \l_@@_output_tl
      }
  }
\cs_new_eq:NN \@@_do:N ?
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\SetLipsumText}
%   Used to select and load the text output by \cs{lipsum} and friends.
%   See the section on loading and defining new outputs for \cs{lipsum}
%   (section~\ref{sec:other-texts}). It first checks whether the
%   requested text is already loaded, and if not, it clears
%   \cs{g_@@_paragraph_seq} and loads the corresponding lipsum text
%   definition
%   file.
%    \begin{macrocode}
\NewDocumentCommand \SetLipsumText { m }
  {
    \str_if_eq:VnF \g_@@_text_str {#1}
      {
        \seq_gclear:N \g_@@_paragraph_seq
        \file_input:n {#1.ltd}
        \str_gset:Nn \g_@@_text_str {#1}
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{Messages}
%
%    \begin{macrocode}
\msg_new:nnn { lipsum } { invalid-range }
  { Invalid~number~or~range~'#1'. }
%    \end{macrocode}
%
% \subsection{Package options and defaults}
%
%    \begin{macrocode}
\cs_new_protected:Nn \@@_restore_sentence_list:
  {
    \SetLipsumSentenceListItemSeparator  { ~ }
    \SetLipsumSentenceListItemSeparator* { ~ }
    \SetLipsumSentenceListSurrounders  { } { }
    \SetLipsumSentenceListSurrounders* { } { }
    \SetLipsumSentenceListItemSurrounders  { } { }
    \SetLipsumSentenceListItemSurrounders* { } { }
}
\cs_new_protected:Nn \@@_restore_par_list:
  {
    \SetLipsumParListItemSeparator  { \par }
    \SetLipsumParListItemSeparator* { ~ }
    \SetLipsumParListSurrounders  { } { }
    \SetLipsumParListSurrounders* { } { }
    \SetLipsumParListItemSurrounders  { } { }
    \SetLipsumParListItemSurrounders* { } { }
}
\DeclareOption {nopar}
  {
    \cs_gset_protected:Npn \@@_restore_sentence_list:
      {
        \SetLipsumSentenceListItemSeparator  { ~ }
        \SetLipsumSentenceListItemSeparator* { ~ }
        \SetLipsumSentenceListEnd  { }
        \SetLipsumSentenceListEnd* { }
        \SetLipsumSentenceListItemSurrounders  { } { }
        \SetLipsumSentenceListItemSurrounders* { } { }
      }
    \cs_gset_protected:Npn \@@_restore_par_list:
      {
        \SetLipsumParListItemSeparator  { ~ }
        \SetLipsumParListItemSeparator* { \par }
        \SetLipsumParListEnd  { }
        \SetLipsumParListEnd* { }
        \SetLipsumParListItemSurrounders  { } { }
        \SetLipsumParListItemSurrounders* { } { }
      }
  }
\ProcessOptions
\cs_new_protected:Npn \LipsumRestoreParList
  { \@@_restore_par_list: }
\cs_new_protected:Npn \LipsumRestoreSentenceList
  { \@@_restore_sentence_list: }
\cs_new_protected:Npn \LipsumRestoreAll
  {
    \LipsumRestoreParList
    \LipsumRestoreSentenceList
  }
\LipsumRestoreAll
%    \end{macrocode}
%
%    \begin{macrocode}
\ExplSyntaxOff
\SetLipsumDefault{1-7}
\SetLipsumText{lipsum}
%    \end{macrocode}
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
% \end{implementation}
%
% \endinput
% Local Variables:
% mode: doctex
% TeX-master: t
% End:
